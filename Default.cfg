# File : Default.cfg
# To be used as a template config file for FVlite.cpp

RunName = "data/Default";

Output: // Name output file, how often to print, whether to print initial conditions
{
    RunName = "Default";
    PrintEvery = 5;
    PrintInitial = true;
}

Grid:  // Determines grid dimensions, characteristics, etc
{
    size = { x = 2.0; y = 2.0;};
    cells = { x = 100; y = 100;};
};

Timing:  // Lists params related to timestepping
{
    CFL   = 0.9;
    tmax = 2.0;
};

FVM: // 'Finite Volume Method'. Choose type of solver, flux scheme, limiter.
{
    type = "Std";
    scheme  = "HLLC";
    limiter = "VanLeer";
    cutcells = "None";
};


Initialisation:
{
    module1:
    {
        type = "Background";
        inner = true;
        solid = false;
        rank = 1;
        params:
        {
            state = { rho=0.125; 
                      ux=0.0;
                      uy=0.0;
                      p=0.1;}
        }
    }

    module2:
    {
        type = "Rectangle";
        inner = true;
        solid = false;
        rank = 2;
        params:
        {
            state = { rho=1.0; 
                      ux=0.0;
                      uy=0.0;
                      p=1.0;}
            lowerleft  = { x=-1.0;
                           y=-1.0;}
            upperright = { x=0.5;
                           y=10.0;}
        }    
    }

    module3:
    {
        type = "Circle";
        inner = true;
        solid = true;
        rank = 3;
        params:
        {
            center = { x=1.2;
                       y=1.0;}
            radius = 0.5;
        }    
    }

    module4:
    {
        type = "Slope";
        inner = true;
        solid = true;
        rank = 3;
        params:
        {
            point1  = { x=0.8;
                        y=0.0;}
            point2  = { x=2.0;
                        y=0.8;}
        }
    }
}

Boundaries: // Specify bounday conditions at each wall, and the behaviour of internal boundaries
{
    boundary1:
    {
        region = "internal";
        type = "Reflective";
    }
    boundary2:
    {
        region = "leftwall";
        type = "Transmissive";
    }
    boundary3:
    {
        region = "rightwall";
        type = "Transmissive";
    }
    boundary4:
    {
        region = "upperwall";
        type = "Reflective";
    }
    boundary5:
    {
        region = "lowerwall";
        type = "Reflective";
    }
};

### eof
