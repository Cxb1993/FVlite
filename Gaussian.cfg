# File : MaxwellCutCell.cfg
# To be used as a template config file for FVlite.cpp

RunName = "data/MaxwellCutCell";

Output: // Name output file, how often to print, whether to print initial conditions
{
    RunName = "Maxwell";
    PrintEvery = 1;
    PrintInitial = false;
    PrintDelay   = 0.0;
    PrintCutCells = true;
}

Grid:  // Determines grid dimensions, characteristics, etc
{
    size = { x = 2.0; y = 2.0;};
    cells = { x = 150; y = 150;};
};

Timing:  // Lists params related to timestepping
{
    CFL = 0.45;
    // T = 1.2566370614359171e-9
    //tmax = 1.0053096491487337e-8; # 8 period
    tmax = 1.2566370614359171e-8; # 10 period
};

FVM: // 'Finite Volume Method'. Choose type of solver, flux scheme, limiter.
{
    #type = "Std";
    type = "CutCell";
    scheme  = "SLIC";
    limiter = "None";
};


Initialisation:
{
    module1:
    {
        type = "Background";
        inner = true;
        solid = false;
        rank = 1;
        params:
        {
            state = { Ex=0.0; 
                      Ey=0.0;
                      Ez=0.0;
                      Hx=0.0;
                      Hy=0.0;
                      Hz=0.0;}
        }
    }

    Circle:
    {
        type = "Circle";
        inner = true;
        solid = true;
        rank = 3;
        params:
        {
            center: 
            { 
                x=1.0;
                y=1.0;
            }
            radius  = 0.5;
        }
    }
}

Boundaries: // Specify bounday conditions at each wall, and the behaviour of internal boundaries
{
#    boundary1:
#    {
#        region = "internal";
#        type = "Reflective";
#    }

#    boundary2:
#    {
#        region = "leftwall";
#        type = "Sine";
#        params:
#        {
#            amplitude=1.0;
#            frequency=5e9;
#            polarisation="TE";
#        }
#    }

    boundary2:
    {
        region = "leftwall";
        type = "Gaussian";
        params:
        {
            amplitude=1.0;
            stddev=1e-9;
            mean=4e-9;
            polarisation="TE";
        }
    }

#    boundary2:
#    {
#        region = "leftwall";
#        type   = "Transmissive";
#    }

    boundary3:
    {
        region = "rightwall";
        type = "Transmissive";
    }

#    boundary4:
#    {
#        region = "upperwall";
#        type = "Sine";
#        params:
#        {
#            amplitude=1.0;
#            frequency=5e9;
#            polarisation="TE";
#        }
#    }

    boundary4:
    {
        region = "upperwall";
        type = "Transmissive";
    }


#    boundary5:
#    {
#        region = "lowerwall";
#        type = "Sine";
#        params:
#        {
#            amplitude=1.0;
#            frequency=1e10;
#            polarisation="TE";
#        }
#    }

    boundary5:
    {
        region = "lowerwall";
        type = "Transmissive";
    }
};

### eof
