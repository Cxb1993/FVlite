# TODO
# list of things to work on

> Generalise Updater class
    - Implement an 'EventSequencer', which can be set up
      at run time or load from set of defaults.
    - This will contain a 'std::vector<Event*>', where 
      'Event' is a class which performs some task over
      the grid. An example is an x-sweep, or a boundary
      update.
    - The 'Events' themselves should be modifiable. For
      example, an x-sweep will need a flux method, an
      explicit update formula, etc.
> Improve flux solver implementation
    - Inheritance structure is quite rigid and requires the
      user to know a number of opaque names for each solver
      type. For example, FORCE vs SLIC. Ideally, it should
      be the case that the user can pick:
      * flux calculator
      * Reconstruction method
      * Limiter
> fWlayer implementation
    - Make it part of an 'AbsorbingLayer' class.
> Template everything over FiniteVolume scheme?
    - Will need to plan this stage well
